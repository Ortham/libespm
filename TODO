Coming soon:

Extraction of record content from ESP/ESMs.
----The header thing is now done. At least for Oblivion and above. Haven't a clue on Morrowind, however. Probably needs some sort of tweaking to work with Morrowind. 10/23/2012
Extraction of the useful data from ESS files.
--Variables are now supported, 05/31/2012
Code to generate the struct representing the file format for any all games (including future ones) using the ESP/ESM format. This is possible since they use a similar basic structure. One can use this structure to create a skeleton of the file format and then parse through using the predefined format of lengths and sizes of fields to create the actual file struct that will be used per game. The records are gained by using the format the is consistent across all 5 games at the moment.
--Basic code is just about done. 10/09/2012
Fleshing out the configuration file for the basics so as to have the basic values indepent of one another. Currently, I've got some stuff hardcoded and some stuff calling nonrelated values due to not wanting to type up the functions at the time.
Add accessors for getting various stuff from the structs.


Not coming soon but planned:

Update the documentation.

A lot of stuff. XD


Somewhere on the time-line:

Make things saner.

Another overhaul of the organization of the code:
**One possibility for this is to break out each namespace into a separate repository, project, or something and then use the submodules feature of git to link them all together.
**Another possibility is to have a single umbrella project, repository, or whatever and set up each portion as a separate directory or something.
**Either way, the includes and stuff would need to be changed to reflect the new structure.
*Look into replacing the #pragma once usage with the more standard include-guards for compiler portability.
*Look into converting some functions into template functions for more sanity.
*Do a general cleanup of the code for readability and to make it easier to go through and stuff.
*Replace the use of gcount() with the variables. We're already passing the values in, so this adds extra overhead that isn't needed.

Finish up the handling of the table to assign value types to things via an external file to enable on the fly analysis of most data. The complex data stuff will need some interesting trickery to handle without making things game dependent, however. I've got an idea in mind for that, but won't think on it too much until I get to this part.


Last modified:

By: deaths_soul (AKA MCP)
On: 12/04/2012
